package com.bosch.pt.csm.common.i18n
// ---------------------------------
// WARNING: Generated by Gradle task - NOT TO BE EDITED
// ---------------------------------

object Key {

    /**
     * en
     */
    const val KEY = "Key"

    /**
     * Superintendent
     */
    const val EMPLOYEE_ROLE_ENUM_CSM = "EmployeeRoleEnum_Csm"

    /**
     * Foreman
     */
    const val EMPLOYEE_ROLE_ENUM_FM = "EmployeeRoleEnum_Fm"

    /**
     * Representative
     */
    const val EMPLOYEE_ROLE_ENUM_RP = "EmployeeRoleEnum_Rp"

    /**
     * Record can not be updated because the provided version is outdated.
     */
    const val COMMON_VALIDATION_ERROR_ENTITY_OUTDATED = "Common_ValidationError_EntityOutdated"

    /**
     * Change of record not possible as record was already updated or deleted by another user.
     */
    const val COMMON_VALIDATION_ERROR_OPTIMISTIC_LOCKING = "Common_ValidationError_OptimisticLocking"

    /**
     * Creation or modification of the record is not possible because specified data of record violates integrity constraints.
     */
    const val COMMON_VALIDATION_ERROR_DATA_INTEGRITY_VIOLATED = "Common_ValidationError_DataIntegrityViolated"

    /**
     * Invalid country name.
     */
    const val COMPANY_VALIDATION_ERROR_INVALID_COUNTRY_NAME = "Company_ValidationError_InvalidCountryName"

    /**
     * Either a street-, post box or both addresses are required.
     */
    const val COMPANY_VALIDATION_ERROR_MISSING_ADDRESS = "Company_ValidationError_MissingAddress"

    /**
     * The company was not found.
     */
    const val COMPANY_VALIDATION_ERROR_NOT_FOUND = "Company_ValidationError_NotFound"

    /**
     * The user was not found.
     */
    const val COMPANY_VALIDATION_ERROR_NOT_FOUND_USER = "Company_ValidationError_NotFoundUser"

    /**
     * The company can not be deleted due to existing employees.
     */
    const val COMPANY_VALIDATION_ERROR_EXIST_COMPANY_EMPLOYEE = "Company_ValidationError_ExistCompanyEmployee"

    /**
     * You are not authorized to use this country for the address of this company.
     */
    const val COMPANY_VALIDATION_ERROR_UNAUTHORIZED_TO_USE_COUNTRY = "Company_ValidationError_UnauthorizedToUseCountry"

    /**
     * There is already an employee for the given user.
     */
    const val EMPLOYEE_VALIDATION_ERROR_EXIST_USER_EMPLOYEE = "Employee_ValidationError_ExistUserEmployee"

    /**
     * This employee still has one or more linked participants.
     */
    const val EMPLOYEE_VALIDATION_ERROR_EXIST_PARTICIPANT = "Employee_ValidationError_ExistParticipant"

    /**
     * The employee was not found.
     */
    const val EMPLOYEE_VALIDATION_ERROR_NOT_FOUND = "Employee_ValidationError_NotFound"

    /**
     * You are not authorized to add, edit or remove an employee from this country.
     */
    const val EMPLOYEE_VALIDATION_ERROR_UNAUTHORIZED_FOR_USER_OF_THAT_COUNTRY = "Employee_ValidationError_UnauthorizedForUserOfThatCountry"

    /**
     * [Deleted User]
     */
    const val USER_DELETED = "User_Deleted"

    /**
     * User cannot be deleted.
     */
    const val USER_VALIDATION_ERROR_DELETION_NOT_POSSIBLE = "User_ValidationError_DeletionNotPossible"

    /**
     * Given user cannot be found.
     */
    const val USER_VALIDATION_ERROR_NOT_FOUND = "User_ValidationError_NotFound"

}
