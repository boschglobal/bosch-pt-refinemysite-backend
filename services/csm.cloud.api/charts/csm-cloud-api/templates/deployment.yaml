apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    custom/tier: backend
    tags.datadoghq.com/service: {{ .Chart.Name }}
    tags.datadoghq.com/version: {{ .Chart.Version }}
  annotations:
    ad.datadoghq.com/tags: '{"layer":"backend"}'
    custom/targetReplicas: "{{ .Values.replicas }}"
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
        tags.datadoghq.com/service: {{ .Chart.Name }}
        tags.datadoghq.com/version: {{ .Chart.Version }}
      annotations:
        ad.datadoghq.com/tags: '{"layer":"backend"}'
        ad.datadoghq.com/{{ .Chart.Name }}.logs: '[{"source":"csm-backend-spring-boot"}]'
    spec:
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - {{ .Chart.Name }}
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: ptcsmacr.azurecr.io/com.bosch.pt/csm.cloud.api:{{ .Chart.Version }}
        imagePullPolicy: Always
        resources: {{ toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 8090
          name: server
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
          - name: kv-volume-env
            mountPath: /kvmnt/env
            readOnly: true
          - name: kv-volume-subscription
            mountPath: /kvmnt/subscription
            readOnly: true
        env:
        - name: JAVA_TOOL_OPTIONS
          value: >
            -Xmx1000m
            -XX:+UseG1GC
            -Djava.security.egd=file:/dev/./urandom
            -javaagent:/datadog/dd-java-agent.jar
            -Xshare:off
        - name: ROUTE_PREFIX
          value: /api
        - name: SPRING_PROFILES_ACTIVE
          value: {{ quote .Values.profiles }}
        - name: WEB_UI_URL
          value: https://{{ .Values.domainName }}
        - name: ADMIN_WEB_UI_URL
          value: https://{{ .Values.domainNameAdmin }}
        - name: BIM_MODEL_SERVICE_URL
          value: http://csm-cloud-bim-model:8080
        - name: COMPANY_COMPANY_SERVICE_URL
          value: http://csm-cloud-company:8080
        - name: EVENT_SERVICE_URL
          value: http://csm-cloud-event:8080
        - name: FEATURETOGGLE_SERVICE_URL
          value: http://csm-cloud-featuretoggle-core:8080
        - name: JOB_SERVICE_URL
          value: http://csm-cloud-job:8080
        - name: PROJECT_ACTIVITY_SERVICE_URL
          value: http://csm-cloud-project-activity:8080
        - name: PROJECT_API_TIMESERIES_SERVICE_URL
          value: http://csm-cloud-project-api-timeseries:8080
        - name: PROJECT_NEWS_SERVICE_URL
          value: http://csm-cloud-project-news:8080
        - name: PROJECT_NOTIFICATIONS_SERVICE_URL
          value: http://csm-cloud-project-notifications:8080
        - name: PROJECT_PROJECT_SERVICE_URL
          value: http://csm-cloud-project:8080
        - name: PROJECT_STATISTICS_SERVICE_URL
          value: http://csm-cloud-project-statistics:8080
        - name: RESET_SERVICE_URL
          value: http://csm-cloud-reset:8080
        - name: USER_USER_SERVICE_URL
          value: http://csm-cloud-user:8080

        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "false"
        - name: DD_TRACE_PROPAGATION_STYLE_INJECT
          value: "b3single"
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: server
          timeoutSeconds: 10
          # calculate failureThreshold by dividing max startup Time by periodSeconds
          failureThreshold: {{ div .Values.maxStartUpTime 10 }}
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: server
          # timeout was increased from 1 to 10 due to increased response times of the probe in morning hours
          timeoutSeconds: 10
          failureThreshold: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: server
          initialDelaySeconds: 10
          # timeout was increased from 1 to 10 due to increased response times of the probe in morning hours
          timeoutSeconds: 10
          failureThreshold: 1
          periodSeconds: 10
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      restartPolicy: Always
      volumes:
      - name: kv-volume-env
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Chart.Name }}-env-aks-kv"
          nodePublishSecretRef:
            name: kvcreds
      - name: kv-volume-subscription
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Chart.Name }}-sub-aks-kv"
          nodePublishSecretRef:
            name: kvcreds
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
