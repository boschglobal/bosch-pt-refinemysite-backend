apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    custom/kafkaClient: "true"
    custom/tier: backend
    tags.datadoghq.com/service: {{ .Chart.Name }}
    tags.datadoghq.com/version: {{ .Chart.Version }}
  annotations:
    ad.datadoghq.com/tags: '{"layer":"backend"}'
    custom/targetReplicas: "{{ .Values.replicas }}"
spec:
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      name: {{ .Chart.Name }}
      labels:
        app: {{ .Chart.Name }}
        kafkaClient: "true"
        tags.datadoghq.com/service: {{ .Chart.Name }}
        tags.datadoghq.com/version: {{ .Chart.Version }}
      annotations:
        ad.datadoghq.com/tags: '{"layer":"backend"}'
        ad.datadoghq.com/{{ .Chart.Name }}.logs: '[{"source":"csm-backend-spring-boot"}]'
    spec:
      serviceAccountName: {{ .Chart.Name }}
      securityContext:
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Chart.Name }}
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: ptcsmacr.azurecr.io/com.bosch.pt/csm.cloud.project:{{ .Chart.Version }}
        imagePullPolicy: Always
        resources: {{ toYaml .Values.resources | nindent 10 }}
        ports:
        - containerPort: 8080
          name: server
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        volumeMounts:
          - name: kv-volume-env
            mountPath: /kvmnt/env
            readOnly: true
          - name: kv-volume-subscription
            mountPath: /kvmnt/subscription
            readOnly: true
        env:
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "false"
        - name: DD_TRACE_PROPAGATION_STYLE_INJECT
          value: "datadog,b3single,b3multi"
        - name: DD_SERVICE_MAPPING
          value: mysql:{{ .Chart.Name }}-mysql,mongo:{{ .Chart.Name }}-mongo
          # The following two env variables are used to enable origin detection
          # of the underlying dogstatsd client. This is required to add the pod name
          # as a tag to runtime metrics etc. PLEASE NOTE: This is a workaround
          # suggested by datadog support but it is not offically supported!
        - name: DD_ENTITY_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: DD_TAGS
          value: "dd.internal.entity_id:$(DD_ENTITY_ID)"
          # End of tags for the workaround
        - name: JAVA_TOOL_OPTIONS
          value: >
            -XX:InitialRAMPercentage=40.0
            -XX:MaxRAMPercentage=40.0
            -Djava.security.egd=file:/dev/./urandom
            -Dspring.application.name={{ .Chart.Name }}
            -javaagent:/datadog/dd-java-agent.jar
            -Xshare:off
            --add-opens=java.base/java.time=ALL-UNNAMED
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: STAGE
          value: {{ quote .Values.stage }}
        - name: SPRING_PROFILES_ACTIVE
          value: {{ quote .Values.profiles }}
        - name: CSM_PDF_URL
          value: http://csm-cloud-pdf-converter:8080
        - name: CSM_PROJECT_URL
          value: http://{{ .Chart.Name }}:8080
        - name: DOMAIN_NAME
          value: {{ quote .Values.domainName }}
        - name: DOMAIN_NAME_API
          value: {{ quote .Values.domainNameApi }}
        - name: MAILJET_BCC_EMAIL
          value: {{ quote .Values.mailjetBccEmail }}
        - name: MAILJET_ERROR_REPORTING_EMAIL
          value: {{ quote .Values.mailjetErrorReportingEmail }}
        - name: MAILJET_REDIRECT_EMAIL
          value: {{ quote .Values.mailjetRedirectEmail }}
        - name: MAILJET_REDIRECT_PATTERN
          value: {{ quote .Values.mailjetRedirectPattern }}
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: server
          # calculate failureThreshold by dividing max startup Time by periodSeconds
          failureThreshold: {{ div .Values.maxStartUpTime 5 }}
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: server
          failureThreshold: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: server
          initialDelaySeconds: 30
          failureThreshold: 1
          periodSeconds: 5
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      restartPolicy: Always
      volumes:
      - name: kv-volume-env
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Chart.Name }}-env-aks-kv"
          nodePublishSecretRef:
            name: kvcreds
      - name: kv-volume-subscription
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Chart.Name }}-sub-aks-kv"
          nodePublishSecretRef:
            name: kvcreds
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
